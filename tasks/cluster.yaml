---

# - name: create the cluster
#   command: |
#     aws --version
#   register: ret_aws_version
#
# - debug: var=ret_aws_version

#
# - name: create the cluster
#   command: |
#     aws eks create-cluster \
#       --name {{ eks_cluster_name }} \
#       --role-arn {{ eks_iam_role_arn_master }} \
#       --resources-vpc-config \
#         subnetIds={{ eks_vpc_subnets_id }},securityGroupIds={{ eks_vpc_sgs_id_master }}
#   register: ret_eks_cluster
#
# - name: Wait cluster become active cluster status
#   command: |
#      wait_timeout_min=20
#      wait_sleep_min=1
#      COUNT=0
#      while true; do
#        if [[ $COUNT -gt $wait_timeout_min ]]; then
#           echo "Wait timeout. Exiting"; exit 1
#           break;
#        fi
#        RESP=$(aws eks describe-cluster --name {{ eks_cluster_name }} --query cluster.status)
#        if [[ "$RESP" == "ACTIVE" ]]; then
#          break;
#        fi
#        sleep $wait_sleep_sec
#        let "COUNT++"
#      done
#     aws eks describe-cluster --name prod --query cluster.status
#
# - name: get the cluster endpoint
#   command: |
#     aws eks describe-cluster --name devel  --query cluster.endpoint --output text
#   register: ret_endpoint
# - name: get the cluster cacert
#   command: |
#     aws eks describe-cluster --name devel  --query cluster.certificateAuthority.data --output text
#   register: ret_endpoint
